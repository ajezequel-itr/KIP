# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  env(FILE_STORAGE): "%kernel.project_dir%/var/storage"
  admin_password: "%env(ADMIN_PASSWORD)%"
  env(ADMIN_PASSWORD): password
  build_version: "%env(BUILD_VERSION)%"
  env(BUILD_VERSION): "dev"

  env(S3_VERSION): "latest"
  env(S3_REGION): "minio"
  env(S3_KEY): "minioadmin"
  env(S3_SECRET): "minioadmin"
  env(S3_ENDPOINT): "http://localhost:9000"
  s3:
    version: "%env(S3_VERSION)%"
    region: "%env(S3_REGION)%"
    credentials:
      key: "%env(S3_KEY)%"
      secret: "%env(S3_SECRET)%"
    endpoint: "%env(S3_ENDPOINT)%"
    use_path_style_endpoint: true

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']
  App\Services\FileManipulation\FileResolver:
    arguments:
      $basepath: "%env(FILE_STORAGE)%"
  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  custom_extractor:
    class: Symfony\Component\PropertyInfo\PropertyInfoExtractor
    arguments:
      $typeExtractors: [ "@property_info.php_doc_extractor"]
  #, "@property_info.reflection_extractor" ]

  custom_object_serializer:
    class: Symfony\Component\Serializer\Normalizer\ObjectNormalizer
    arguments:
      $propertyTypeExtractor: "@custom_extractor"
    tags:
      - {name: serializer.normalizer, priority: 1}
  Aws\S3\S3Client:
    arguments:
      - "%s3%"